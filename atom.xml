<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta name="description" content="Atom Feed - 潘学文个人博客 - 作者:magicjms"/> 
	
    <title>Atom Feed - 潘学文个人博客</title>
    <!-- Bootstrap Core CSS -->
    <link href="/css/bootstrap.min.css" rel="stylesheet"/>
    <!-- Custom CSS -->
    <link href="/css/blog.css" rel="stylesheet"/>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media
    queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file://
    -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js">
      </script>
      <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js">
      </script>
    <![endif]-->
        <!-- jQuery Version 1.11.0 -->
    <script src="/js/jquery-1.11.0.js"> </script>
    <!-- Bootstrap Core JavaScript -->
    <script src="/js/bootstrap.min.js"></script>
     
    <!--下面的部分为我自己添加上去的-->
    <style type="text/css">
      .col-md-8 blockquote{
        margin-top: 20px;
        padding: 5px 5px;
        background-color: #F1F7FD;
        border: 1px solid #D2E8FA;
        color: #479AC1;
        font-size: 17px;
        font-weight: bold;
      }
    </style>
  </head>
  
  <body>
    <!-- Navigation -->
    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <!-- Brand and toggle get grouped for better mobile display -->
<!--         <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
            <span class="sr-only">
              Toggle navigation
            </span>
            <span class="icon-bar">
            </span>
            <span class="icon-bar">
            </span>
            <span class="icon-bar">
            </span>
          </button>
          <a class="navbar-brand" href="/">
            首页
          </a>
        </div> -->
        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          
<!--
http://blog.csdn.net/rabbitter/article/details/51125337
-->

<style type="text/css">
/*    body,ul,li,a{margin: 0;padding: 0}  */
/*    body{background-color: #e6e7e9;}  */
/*    #nav-wrap{margin: 10px auto;width: 100%;background-color: white;border-bottom: 2px solid #ddd;}  
*/  
    ul,li,a{margin: 0;padding: 0;}
    ul{list-style: none;}  
    #nav{width: 750px; height: 45px;margin:0 auto; float: left;}  
    #nav>li{float: left;position: relative;height: 45px;margin-right: 60px;}  
    #nav a{display: block; text-decoration: none;font-family: "Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif;font-size: 12px;}  
    #nav>li>a{color: #000;text-transform:uppercase;height: 13px; line-height: 13px; padding: 17px 0 15px 0px;font-size: 16px;text-align: center; color: white;}  
    #nav>li i{display: inline-block; height: 5px; width:5px; background: url(../images/home.png) left bottom no-repeat;}  
    #nav>li ul{position: absolute;left: -20px;top: 47px; width: 180px;background-color: #fff;padding: 20px;display: none;  
        border:1px solid #ECEFF5;}  
    #nav>li ul li{margin-bottom: 10px;}  
    #nav>li ul a{font-size: 12px;color: #606060;}  
    .this{border-bottom: 2px solid #b0b;}  
    #nav>li:hover ul{display:block;}  
    #nav>li:hover{border-bottom: 2px solid #0bb;}  
</style>


<!-- <div id="nav-wrap">  
 --><ul id="nav"><!--一级导航的ul-->  
    <li class="home this"><a href="/"><i></i><span style="font-size: 18px;">首页</span></a></li>  
  
    <li class="safe"><a href="/posts/linux.html"><i></i><span>Linux</span></a><!--一级导航的li-->  
        <ul><!--一级菜单的li中的二级导航的ul-->  
            <li><a href="/posts/shell.html"><span>shell</span></a></li><!--二级导航中各个选项li-->  
            <li><a href="#"><span>Open-Source Apps</span></a></li>  
            <li><a href="#"><span>Android</span></a></li>  
            <li><a href="#"><span>JavaScript</span></a></li>  
        </ul>  
    </li>  
  
    <li class="service"><a href="/posts/python.html"><i></i><span>Python</span></a>  
        <ul>  
            <li><a href="#"><span>基础</span></a></li>  
            <li><a href="#"><span>常用模块</span></a></li>  
            <li><a href="#"><span>Android</span></a></li>  
            <li><a href="#"><span>JavaScript</span></a></li>  
        </ul>  
    </li>  
    <li class="shoping-car"><a href="#"><i></i><span>SHOPING CAR</span></a>  
        <ul>  
            <li><a href="#"><span>After Effects</span></a></li>  
            <li><a href="#"><span>Open-Source Apps</span></a></li>  
            <li><a href="#"><span>Android</span></a></li>  
            <li><a href="#"><span>JavaScript</span></a></li>  
        </ul>  
    </li>  
    <li class="member"><a href="#"><i></i><span>MEMBER</span></a>  
        <ul>  
            <li><a href="#"><span>After Effects</span></a></li>  
            <li><a href="#"><span>Open-Source Apps</span></a></li>  
            <li><a href="#"><span>Android</span></a></li>  
            <li><a href="#"><span>See More...</span></a></li>  
        </ul>  
    </li>  
</ul>  
<!-- </div>   --> 
        </div>
        <!-- /.navbar-collapse -->
      </div>
      <!-- /.container -->
    </nav>
    <!-- Page Content -->
    <div class="container">
      <div class="row">
        <!-- Blog Entries Column -->
        <div class="col-md-8">
          <!-- Navi -->

<!-- Title -->
<h2>Atom Feed</h2>

<div class="post-date">
	<span class="glyphicon glyphicon-time"></span>
	
</div>
<br/>

<!-- content -->
<div style="text-indent:0em;">
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title></title>
 <link href="http://magicjms.github.io/atom.xml" rel="self"/>
 <link href="http://magicjms.github.io"/>
 <updated>2018-01-12T16:56:26+08:00</updated>
 <author>
   <name>magicjms</name>
   <email>2368691083@qq.com</email>
 </author>

 
 <entry>
   <title>curl模拟http发送get或post接口测试</title>
   <link href="http://magicjms.github.io/posts/Linux-base-curl-post.html"/>
   <updated>2017-12-10T00:00:00+08:00</updated>
   <id>/posts/Linux-base-curl-post</id>
   <content type="html">&lt;p&gt;curl是我们在linux下经常使用的http访问、测试、诊断工具，这篇博客主要记录如何使用curl构建get、带参数的post请求&lt;!-- more --&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;一、get请求 &lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;curl “http://www.baidu.com”  如果这里的URL指向的是一个文件或者一幅图都可以直接下载到本地&lt;/p&gt;

&lt;p&gt;curl -i “http://www.baidu.com”  显示全部信息&lt;/p&gt;

&lt;p&gt;curl -l “http://www.baidu.com” 只显示头部信息&lt;/p&gt;

&lt;p&gt;curl -v “http://www.baidu.com” 显示get请求全过程解析&lt;/p&gt;

&lt;p&gt;wget “http://www.baidu.com”也可以&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;二、post请求&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;curl -d “param1=value1&amp;amp;param2=value2” “http://www.baidu.com”&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt; 三、json格式的post请求&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;curl -l -H “Content-type: application/json” -X POST -d ‘{“phone”:”13521389587”,”password”:”test”}’ http://domain/apis/users.json&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -l -H &quot;Content-type: application/json&quot; -X POST -d '{&quot;ver&quot;: &quot;1.0&quot;,&quot;soa&quot;:{&quot;req&quot;:&quot;123&quot;},&quot;iface&quot;:&quot;me.ele.lpdinfra.prediction.service.PredictionService&quot;,&quot;method&quot;:&quot;restaurant_make_order_time&quot;,&quot;args&quot;:{&quot;arg2&quot;:&quot;\&quot;stable\&quot;&quot;,&quot;arg1&quot;:&quot;{\&quot;code\&quot;:[\&quot;WIND\&quot;],\&quot;temperature\&quot;:11.11}&quot;,&quot;arg0&quot;:&quot;{\&quot;tracking_id\&quot;:\&quot;100000000331770936\&quot;,\&quot;eleme_order_id\&quot;:\&quot;100000000331770936\&quot;,\&quot;platform_id\&quot;:\&quot;4\&quot;,\&quot;restaurant_id\&quot;:\&quot;482571\&quot;,\&quot;dish_num\&quot;:1,\&quot;dish_info\&quot;:[{\&quot;entity_id\&quot;:142547763,\&quot;quantity\&quot;:1,\&quot;category_id\&quot;:1,\&quot;dish_name\&quot;:\&quot;[0xe7][0x89][0xb9][0xe4][0xbb][0xb7][0xe8][0x85][0x8a][0xe5][0x91][0xb3][0xe5][0x8f][0x89][0xe7][0x83][0xa7][0xe5][0x8f][0x8c][0xe6][0x8b][0xbc][0xe7][0x85][0xb2][0xe4][0xbb][0x94][0xe9][0xa5][0xad]\&quot;,\&quot;price\&quot;:31.0}],\&quot;merchant_location\&quot;:{\&quot;longitude\&quot;:\&quot;121.47831425\&quot;,\&quot;latitude\&quot;:\&quot;31.27576153\&quot;},\&quot;customer_location\&quot;:{\&quot;longitude\&quot;:\&quot;121.47831425\&quot;,\&quot;latitude\&quot;:\&quot;31.27576153\&quot;},\&quot;created_at\&quot;:1477896550,\&quot;confirmed_at\&quot;:1477896550,\&quot;dishes_total_price\&quot;:0.0,\&quot;food_boxes_total_price\&quot;:2.0,\&quot;delivery_total_price\&quot;:2.0,\&quot;pay_amount\&quot;:35.0,\&quot;city_id\&quot;:\&quot;1\&quot;}&quot;}}' http://vpcb-lpdinfra-stream-1.vm.elenet.me:8989/rpc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考资料：&lt;a href=&quot;https://www.cnblogs.com/sunshine2016/p/6015976.html&quot; title=&quot;https://www.cnblogs.com/sunshine2016/p/6015976.html&quot;&gt;https://www.cnblogs.com/sunshine2016/p/6015976.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>wget命令详解</title>
   <link href="http://magicjms.github.io/posts/Linux-base-cmd-wget.html"/>
   <updated>2017-12-10T00:00:00+08:00</updated>
   <id>/posts/Linux-base-cmd-wget</id>
   <content type="html">&lt;p&gt;Linux系统中的wget是一个下载文件的工具，它用在命令行下。对于Linux用户是必不可少的工具，我们经常要下载一些软件或从远程服务器恢复备份到本地服务器。wget支持HTTP，HTTPS和FTP协议，可以使用HTTP代理。所谓的自动下载是指，wget可以在用户退出系统的之后在后台执行。这意味这你可以登录系统，启动一个wget下载任务，然后退出系统，wget将在后台执行直到任务完成，相对于其它大部分浏览器在下载大量数据时需要用户一直的参与，这省去了极大的麻烦。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;wget 可以跟踪HTML页面上的链接依次下载来创建远程服务器的本地版本，完全重建原始站点的目录结构。这又常被称作”递归下载”。在递归下载的时候，wget 遵循Robot Exclusion标准(/robots.txt). wget可以在下载的同时，将链接转换成指向本地文件，以方便离线浏览。&lt;/p&gt;

&lt;p&gt;wget 非常稳定，它在带宽很窄的情况下和不稳定网络中有很强的适应性.如果是由于网络的原因下载失败，wget会不断的尝试，直到整个文件下载完毕。如果是服务器打断下载过程，它会再次联到服务器上从停止的地方继续下载。这对从那些限定了链接时间的服务器上下载大文件非常有用。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;1．命令格式：&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;wget [参数] [URL地址]
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;2．命令功能：&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;用于从网络上下载资源，没有指定目录，下载资源回默认为当前目录。wget虽然功能强大，但是使用起来还是比较简单：&lt;/p&gt;

&lt;p&gt;1）支持断点下传功能；这一点，也是网络蚂蚁和FlashGet当年最大的卖点，现在，Wget也可以使用此功能，那些网络不是太好的用户可以放心了；&lt;/p&gt;

&lt;p&gt;2）同时支持FTP和HTTP下载方式；尽管现在大部分软件可以使用HTTP方式下载，但是，有些时候，仍然需要使用FTP方式下载软件；&lt;/p&gt;

&lt;p&gt;3）支持代理服务器；对安全强度很高的系统而言，一般不会将自己的系统直接暴露在互联网上，所以，支持代理是下载软件必须有的功能；&lt;/p&gt;

&lt;p&gt;4）设置方便简单；可能，习惯图形界面的用户已经不是太习惯命令行了，但是，命令行在设置上其实有更多的优点，最少，鼠标可以少点很多次，也不要担心是否错点鼠标；&lt;/p&gt;

&lt;p&gt;5）程序小，完全免费；程序小可以考虑不计，因为现在的硬盘实在太大了；完全免费就不得不考虑了，即使网络上有很多所谓的免费软件，但是，这些软件的广告却不是我们喜欢的。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;3．使用实例：&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;实例1：使用wget下载单个文件&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://www.minjieren.com/wordpress-3.1-zh_CN.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;以下的例子是从网络下载一个文件并保存在当前目录，在下载的过程中会显示进度条，包含（下载完成百分比，已经下载的字节，当前下载速度，剩余下载时间）。&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例2：使用wget -O下载并以不同的文件名保存&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -O wordpress.zip http://www.minjieren.com/download.aspx?id=1080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;wget默认会以最后一个符合”/”的后面的字符来命令，对于动态链接的下载通常文件名会不正确。&lt;/p&gt;

&lt;p&gt;错误：下面的例子会下载一个文件并以名称download.aspx?id=1080保存&lt;/p&gt;

&lt;p&gt;wget http://www.minjieren.com/download?id=1&lt;/p&gt;

&lt;p&gt;即使下载的文件是zip格式，它仍然以download.php?id=1080命令。&lt;/p&gt;

&lt;p&gt;正确：为了解决这个问题，我们可以使用参数-O来指定一个文件名：&lt;/p&gt;

&lt;p&gt;wget -O wordpress.zip http://www.minjieren.com/download.aspx?id=1080&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例3：使用wget –limit -rate限速下载&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget --limit-rate=300k http://www.minjieren.com/wordpress-3.1-zh_CN.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;当你执行wget的时候，它默认会占用全部可能的宽带下载。但是当你准备下载一个大文件，而你还需要下载其它文件时就有必要限速了。&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例4：使用wget -c断点续传&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -c http://www.minjieren.com/wordpress-3.1-zh_CN.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;使用wget -c重新启动下载中断的文件，对于我们下载大文件时突然由于网络等原因中断非常有帮助，我们可以继续接着下载而不是重新下载一个文件。需要继续中断的下载时可以使用-c参数。&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例5：使用wget -b后台下载&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; wget -b http://www.minjieren.com/wordpress-3.1-zh_CN.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;对于下载非常大的文件的时候，我们可以使用参数-b进行后台下载。&lt;/p&gt;

&lt;p&gt;wget -b http://www.minjieren.com/wordpress-3.1-zh_CN.zip&lt;/p&gt;

&lt;p&gt;Continuing in background, pid 1840.&lt;/p&gt;

&lt;p&gt;Output will be written to `wget-log’.&lt;/p&gt;

&lt;p&gt;你可以使用以下命令来察看下载进度：&lt;/p&gt;

&lt;p&gt;tail -f wget-log&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例6：伪装代理名称下载&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget --user-agent=&quot;Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.204 Safari/534.16&quot; http://www.minjieren.com/wordpress-3.1-zh_CN.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;有些网站能通过根据判断代理名称不是浏览器而拒绝你的下载请求。不过你可以通过–user-agent参数伪装。&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例7：使用wget –spider测试下载链接&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget --spider URL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;当你打算进行定时下载，你应该在预定时间测试下载链接是否有效。我们可以增加–spider参数进行检查。&lt;/p&gt;

&lt;p&gt;wget –spider URL&lt;/p&gt;

&lt;p&gt;如果下载链接正确，将会显示&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget --spider URL

Spider mode enabled. Check if remote file exists.

HTTP request sent, awaiting response... 200 OK

Length: unspecified [text/html]

Remote file exists and could contain further links,

but recursion is disabled -- not retrieving.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这保证了下载能在预定的时间进行，但当你给错了一个链接，将会显示如下错误&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget --spider url

Spider mode enabled. Check if remote file exists.

HTTP request sent, awaiting response... 404 Not Found

Remote file does not exist -- broken link!!!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;你可以在以下几种情况下使用spider参数：&lt;/p&gt;

&lt;p&gt;定时下载之前进行检查&lt;/p&gt;

&lt;p&gt;间隔检测网站是否可用&lt;/p&gt;

&lt;p&gt;检查网站页面的死链接&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例8：使用wget –tries增加重试次数&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget --tries=40 URL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;如果网络有问题或下载一个大文件也有可能失败。wget默认重试20次连接下载文件。如果需要，你可以使用–tries增加重试次数。&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例9：使用wget -i下载多个文件&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -i filelist.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;首先，保存一份下载链接文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;gt; filelist.txt
url1
url2
url3
url4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接着使用这个文件和参数-i下载&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例10：使用wget –mirror镜像网站&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget --mirror -p --convert-links -P ./LOCAL URL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;下载整个网站到本地。&lt;/p&gt;

&lt;p&gt;–miror:开户镜像下载&lt;/p&gt;

&lt;p&gt;-p:下载所有为了html页面显示正常的文件&lt;/p&gt;

&lt;p&gt;–convert-links:下载后，转换成本地的链接&lt;/p&gt;

&lt;p&gt;-P ./LOCAL：保存所有文件和目录到本地指定目录&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例11：使用wget –reject过滤指定格式下载&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：
    wget –reject=gif ur&lt;/p&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;下载一个网站，但你不希望下载图片，可以使用以下命令。&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例12：使用wget -o把下载信息存入日志文件&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -o download.log URL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;不希望下载信息直接显示在终端而是在一个日志文件，可以使用&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例13：使用wget -Q限制总下载文件大小&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -Q5m -i filelist.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;当你想要下载的文件超过5M而退出下载，你可以使用。注意：这个参数对单个文件下载不起作用，只能递归下载时才有效。&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例14：使用wget -r -A下载指定格式文件&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -r -A.pdf url
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;可以在以下情况使用该功能：&lt;/p&gt;

&lt;p&gt;下载一个网站的所有图片&lt;/p&gt;

&lt;p&gt;下载一个网站的所有视频&lt;/p&gt;

&lt;p&gt;下载一个网站的所有PDF文件&lt;/p&gt;

&lt;p&gt;&lt;b&gt;实例15：使用wget FTP下载&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget ftp-url

wget --ftp-user=USERNAME --ftp-password=PASSWORD url
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;说明：&lt;/p&gt;

&lt;p&gt;可以使用wget来完成ftp链接的下载。&lt;/p&gt;

&lt;p&gt;使用wget匿名ftp下载：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget ftp-url
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用wget用户名和密码认证的ftp下载&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget --ftp-user=USERNAME --ftp-password=PASSWORD url
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;备注：编译安装&lt;/p&gt;

&lt;p&gt;使用如下命令编译安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# tar zxvf wget-1.9.1.tar.gz 
# cd wget-1.9.1 
# ./configure 
# make 
# make install 
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;4．命令参数：&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;启动参数：&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;-V, –version 显示wget的版本后退出&lt;/p&gt;

&lt;p&gt;-h, –help 打印语法帮助&lt;/p&gt;

&lt;p&gt;-b, –background 启动后转入后台执行&lt;/p&gt;

&lt;p&gt;-e, –execute=COMMAND 执行`.wgetrc’格式的命令，wgetrc格式参见/etc/wgetrc或~/.wgetrc记录和输入文件参数：&lt;/p&gt;

&lt;p&gt;-o, –output-file=FILE 把记录写到FILE文件中&lt;/p&gt;

&lt;p&gt;-a, –append-output=FILE 把记录追加到FILE文件中&lt;/p&gt;

&lt;p&gt;-d, –debug 打印调试输出&lt;/p&gt;

&lt;p&gt;-q, –quiet 安静模式(没有输出)&lt;/p&gt;

&lt;p&gt;-v, –verbose 冗长模式(这是缺省设置)&lt;/p&gt;

&lt;p&gt;-nv, –non-verbose 关掉冗长模式，但不是安静模式&lt;/p&gt;

&lt;p&gt;-i, –input-file=FILE 下载在FILE文件中出现的URLs&lt;/p&gt;

&lt;p&gt;-F, –force-html 把输入文件当作HTML格式文件对待&lt;/p&gt;

&lt;p&gt;-B, –base=URL 将URL作为在-F -i参数指定的文件中出现的相对链接的前缀&lt;/p&gt;

&lt;p&gt;–sslcertfile=FILE 可选客户端证书&lt;/p&gt;

&lt;p&gt;–sslcertkey=KEYFILE 可选客户端证书的KEYFILE&lt;/p&gt;

&lt;p&gt;–egd-file=FILE 指定EGD socket的文件名&lt;/p&gt;

&lt;p&gt;&lt;b&gt;下载参数：&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;–bind-address=ADDRESS 指定本地使用地址(主机名或IP，当本地有多个IP或名字时使用)&lt;/p&gt;

&lt;p&gt;-t, –tries=NUMBER 设定最大尝试链接次数(0 表示无限制).&lt;/p&gt;

&lt;p&gt;-O –output-document=FILE 把文档写到FILE文件中&lt;/p&gt;

&lt;p&gt;-nc, –no-clobber 不要覆盖存在的文件或使用.#前缀&lt;/p&gt;

&lt;p&gt;-c, –continue 接着下载没下载完的文件&lt;/p&gt;

&lt;p&gt;–progress=TYPE 设定进程条标记&lt;/p&gt;

&lt;p&gt;-N, –timestamping 不要重新下载文件除非比本地文件新&lt;/p&gt;

&lt;p&gt;-S, –server-response 打印服务器的回应&lt;/p&gt;

&lt;p&gt;–spider 不下载任何东西&lt;/p&gt;

&lt;p&gt;-T, –timeout=SECONDS 设定响应超时的秒数&lt;/p&gt;

&lt;p&gt;-w, –wait=SECONDS 两次尝试之间间隔SECONDS秒&lt;/p&gt;

&lt;p&gt;–waitretry=SECONDS 在重新链接之间等待1…SECONDS秒&lt;/p&gt;

&lt;p&gt;–random-wait 在下载之间等待0…2*WAIT秒&lt;/p&gt;

&lt;p&gt;-Y, –proxy=on/off 打开或关闭代理&lt;/p&gt;

&lt;p&gt;-Q, –quota=NUMBER 设置下载的容量限制&lt;/p&gt;

&lt;p&gt;–limit-rate=RATE 限定下载输率&lt;/p&gt;

&lt;p&gt;&lt;b&gt;目录参数：&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;-nd –no-directories 不创建目录&lt;/p&gt;

&lt;p&gt;-x, –force-directories 强制创建目录&lt;/p&gt;

&lt;p&gt;-nH, –no-host-directories 不创建主机目录&lt;/p&gt;

&lt;p&gt;-P, –directory-prefix=PREFIX 将文件保存到目录 PREFIX/…&lt;/p&gt;

&lt;p&gt;–cut-dirs=NUMBER 忽略 NUMBER层远程目录&lt;/p&gt;

&lt;p&gt;HTTP 选项参数：&lt;/p&gt;

&lt;p&gt;–http-user=USER 设定HTTP用户名为 USER.&lt;/p&gt;

&lt;p&gt;–http-passwd=PASS 设定http密码为 PASS&lt;/p&gt;

&lt;p&gt;-C, –cache=on/off 允许/不允许服务器端的数据缓存 (一般情况下允许)&lt;/p&gt;

&lt;p&gt;-E, –html-extension 将所有text/html文档以.html扩展名保存&lt;/p&gt;

&lt;p&gt;–ignore-length 忽略 `Content-Length’头域&lt;/p&gt;

&lt;p&gt;–header=STRING 在headers中插入字符串 STRING&lt;/p&gt;

&lt;p&gt;–proxy-user=USER 设定代理的用户名为 USER&lt;/p&gt;

&lt;p&gt;–proxy-passwd=PASS 设定代理的密码为 PASS&lt;/p&gt;

&lt;p&gt;–referer=URL 在HTTP请求中包含 `Referer: URL’头&lt;/p&gt;

&lt;p&gt;-s, –save-headers 保存HTTP头到文件&lt;/p&gt;

&lt;p&gt;-U, –user-agent=AGENT 设定代理的名称为 AGENT而不是 Wget/VERSION&lt;/p&gt;

&lt;p&gt;–no-http-keep-alive 关闭 HTTP活动链接 (永远链接)&lt;/p&gt;

&lt;p&gt;–cookies=off 不使用 cookies&lt;/p&gt;

&lt;p&gt;–load-cookies=FILE 在开始会话前从文件 FILE中加载cookie&lt;/p&gt;

&lt;p&gt;–save-cookies=FILE 在会话结束后将 cookies保存到 FILE文件中&lt;/p&gt;

&lt;p&gt;&lt;b&gt;FTP 选项参数：&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;-nr, –dont-remove-listing 不移走 `.listing’文件&lt;/p&gt;

&lt;p&gt;-g, –glob=on/off 打开或关闭文件名的 globbing机制&lt;/p&gt;

&lt;p&gt;–passive-ftp 使用被动传输模式 (缺省值).&lt;/p&gt;

&lt;p&gt;–active-ftp 使用主动传输模式&lt;/p&gt;

&lt;p&gt;–retr-symlinks 在递归的时候，将链接指向文件(而不是目录)&lt;/p&gt;

&lt;p&gt;&lt;b&gt;递归下载参数：&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;-r, –recursive 递归下载－－慎用!&lt;/p&gt;

&lt;p&gt;-l, –level=NUMBER 最大递归深度 (inf 或 0 代表无穷)&lt;/p&gt;

&lt;p&gt;–delete-after 在现在完毕后局部删除文件&lt;/p&gt;

&lt;p&gt;-k, –convert-links 转换非相对链接为相对链接&lt;/p&gt;

&lt;p&gt;-K, –backup-converted 在转换文件X之前，将之备份为 X.orig&lt;/p&gt;

&lt;p&gt;-m, –mirror 等价于 -r -N -l inf -nr&lt;/p&gt;

&lt;p&gt;-p, –page-requisites 下载显示HTML文件的所有图片&lt;/p&gt;

&lt;p&gt;&lt;b&gt;递归下载中的包含和不包含(accept/reject)：&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;-A, –accept=LIST 分号分隔的被接受扩展名的列表&lt;/p&gt;

&lt;p&gt;-R, –reject=LIST 分号分隔的不被接受的扩展名的列表&lt;/p&gt;

&lt;p&gt;-D, –domains=LIST 分号分隔的被接受域的列表&lt;/p&gt;

&lt;p&gt;–exclude-domains=LIST 分号分隔的不被接受的域的列表&lt;/p&gt;

&lt;p&gt;–follow-ftp 跟踪HTML文档中的FTP链接&lt;/p&gt;

&lt;p&gt;–follow-tags=LIST 分号分隔的被跟踪的HTML标签的列表&lt;/p&gt;

&lt;p&gt;-G, –ignore-tags=LIST 分号分隔的被忽略的HTML标签的列表&lt;/p&gt;

&lt;p&gt;-H, –span-hosts 当递归时转到外部主机&lt;/p&gt;

&lt;p&gt;-L, –relative 仅仅跟踪相对链接&lt;/p&gt;

&lt;p&gt;-I, –include-directories=LIST 允许目录的列表&lt;/p&gt;

&lt;p&gt;-X, –exclude-directories=LIST 不被包含目录的列表&lt;/p&gt;

&lt;p&gt;-np, –no-parent 不要追溯到父目录&lt;/p&gt;

&lt;p&gt;wget -S –spider url 不下载只显示过程&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>python内建函数—isinstance</title>
   <link href="http://magicjms.github.io/posts/Python_Base_isinstance.html"/>
   <updated>2017-12-08T00:00:00+08:00</updated>
   <id>/posts/Python_Base_isinstance</id>
   <content type="html">&lt;p&gt;本篇主要介绍python内建函数isinstance的功能及用法&lt;!-- more --&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;一、&lt;b&gt;python内建函数 isinstance的用法&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;语法：isinstance（object，classinfo）&lt;/p&gt;

&lt;p&gt;作用：来判断一个对象是否是这个类&lt;span style=&quot;color:red&quot;&gt;&lt;b&gt;(可以简单理解为object为classinfo的子集)&lt;/b&gt;&lt;/span&gt;。&lt;/p&gt;

&lt;p&gt;其第一个参数（object）为对象，第二个参数（classinfo）为类型名(int…)或类型名的一个列表((int,list,float)是一个列表)。&lt;/p&gt;

&lt;p&gt;返回值：为布尔型（True or flase）。&lt;/p&gt;

&lt;p&gt;若对象的类型与参数二的类型相同则返回True。若参数二为一个元组，则若对象类型与元组中类型名之一相同即返回True。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;二、&lt;b&gt;示例&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;例一&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; a = 4
&amp;gt;&amp;gt;&amp;gt; isinstance (a,int)
True
&amp;gt;&amp;gt;&amp;gt; isinstance (a,str)
False
&amp;gt;&amp;gt;&amp;gt; isinstance (a,(str,int,list))
True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例二&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class objA:   
pass   
  
A = objA()   
B = 'a','v'   
C = 'a string'   
  
print isinstance(A, objA)   
print isinstance(B, tuple)   
print isinstance(C, basestring)   
输出结果：   
True   
True   
True   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;不仅如此，还可以利用isinstance函数，来判断一个对象是否是一个已知的类型。&lt;br /&gt;
isinstance说明如下:&lt;br /&gt;
    isinstance(object, class-or-type-or-tuple) -&amp;gt; bool&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Return whether an object is an instance of a class or of a subclass thereof.  
With a type as second argument, return whether that is the object's type.  
The form using a tuple, isinstance(x, (A, B, ...)), is a shortcut for  
isinstance(x, A) or isinstance(x, B) or ... (etc.).  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其第一个参数为对象，第二个为类型名或类型名的一个列表。其返回值为布尔型。若对象的类型与参数二的类型相同则返回True。若参数二为一个元组，则若对象类型与元组中类型名之一相同即返回True。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;isinstance(lst, list)  
True  
  
&amp;gt;&amp;gt;&amp;gt;isinstance(lst, (int, str, list) )  
True  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另外:Python可以得到一个对象的类型 ，利用type函数：»&amp;gt;lst = [1, 2, 3]»&amp;gt;type(lst)&amp;lt;type ‘list’&amp;gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>shell脚本中的时间运算</title>
   <link href="http://magicjms.github.io/posts/Linux-shell_time.html"/>
   <updated>2017-12-01T00:00:00+08:00</updated>
   <id>/posts/Linux-shell_time</id>
   <content type="html">&lt;p&gt;在shell脚本中经常会遇到时间运算，本篇主要介绍shell脚本常用的时间处理方法以及常用示例&lt;!-- more --&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;一、&lt;b&gt;时间基础知识&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;首先我们先来说说什么是shell下的时间戳：&lt;/p&gt;

&lt;p&gt;自1970年1月1日（00:00:00 UTC/GMT）以来的秒数。它也被称为Unix时间戳（Unix Timestam、Unix epoch、POSIX time、Unix timestamp）是从1970年1月1日（UTC/GMT的午夜）开始所经过的秒数，不考虑闰秒。&lt;/p&gt;

&lt;p&gt;UNIX时间戳的0按照ISO 8601规范为：1970-01-01T00:00:00Z 一个小时表示为UNIX时间戳格式为：3600秒；一天表示为UNIX时间戳为86400秒，闰秒不计算。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;二、&lt;b&gt;时间运算原理&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p style=&quot;color:red&quot;&gt;shell下的时间加减法就是根据时间戳来实现的，先将要运算的时间转化成时间戳然后进行运算，运算完成后再将得到的时间戳转化成我们常见格式的时间&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;三、&lt;b&gt;常用示例&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;比如：计算某天的时间戳，也就是指定的某一个到1970年1月1日以来的秒数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a.将基础时间转为时间戳
time1=$(date +%s -d '1990-01-01 01:01:01')
echo $time1
631126861 【时间戳】

b.将增加时间变成秒
[root@localhost ~]# time2=$((1*60*60+20*60))
[root@localhost ~]# echo $time2
4800

c.两个时间相加，计算出结果时间
time3=$(($time1+$time2))
time4=$(date +%Y-%m-%d\ %H:%M:%S -d &quot;1970-01-01 UTC $time3 seconds&quot;);
echo $time4
1990-01-01 02:21:01
 
d.时间差计算方法
如：2010-01-01 与 2009-01-01 11:11:11 时间差
原理：同样转成时间戳，然后计算天，时，分，秒
time1=$(($(date +%s -d '2010-01-01') - $(date +%s -d '2009-01-01 11:11:11')));
echo time1
将time1 / 60 秒，就变成分了。

 
e.如果知道某个时间戳，也可以计算出这个时间戳对应的时间日期
[root@node1 shell]# date --date=@1417779944
Fri Dec  5 19:45:44 CST 2014
 
[root@node1 shell]# date -d @1417779944
Fri Dec  5 19:45:44 CST 2014
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;知道这些之后那我们就可以计算某一天距离今天过了多少天了：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
#
first_stamp=`date -d &quot;2014-12-05 19:45:44&quot; +%s` #计算指定日期的时间戳
today_stamp=`date +%s`                          #计算当天的时间戳
let day_stamp=($today_stamp - $first_stamp)     #当天的时间戳减去指定的时间戳
let day=($day_stamp/86400)                      #相差的时间戳除以一天的秒数就得到天数
echo $day
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下还有一些时间的计算方法：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@node1 shell]# echo $(date --date='3 day')  //当天日期+3天
Fri Jan 16 11:55:02 CST 2015
[root@node1 shell]# 
[root@node1 shell]# echo $(date --date='3 day ago')  //当天日期-3天
Sat Jan 10 11:55:10 CST 2015
[root@node1 shell]# 
[root@node1 shell]# echo $(date --date='3 month')  //当天日期+3月
Mon Apr 13 11:55:17 CST 2015
[root@node1 shell]#  
[root@node1 shell]# echo $(date --date='3 month ago')  //当天日期-3朋
Mon Oct 13 11:55:25 CST 2014
[root@node1 shell]# 
[root@node1 shell]# echo $(date --date='3 year')  //当天日期+3年
Sat Jan 13 11:55:32 CST 2018
[root@node1 shell]# 
[root@node1 shell]# echo $(date --date='3 year ago')  //当天日期-3年
Fri Jan 13 11:55:38 CST 2012
[root@node1 shell]#
[root@node1 shell]# echo $(date --date='3 minute ')  //当天日期+3秒
Tue Jan 13 11:58:44 CST 2015
[root@node1 shell]# 
[root@node1 shell]# echo $(date --date='3 minute ago')  //当天日期-3秒
Tue Jan 13 11:52:52 CST 2015
[root@node1 shell]# 
[root@node1 shell]# echo $(date --date='3 hour ago')  //当天日期-3小时
Tue Jan 13 08:56:00 CST 2015
[root@node1 shell]# 
[root@node1 shell]# echo $(date --date='3 hour')  //当天日期+3小时
Tue Jan 13 14:56:06 CST 2015
[root@node1 shell]#
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>阿里云公共NTP、DNS、镜像服务地址信息</title>
   <link href="http://magicjms.github.io/posts/LinuxPublicService.html"/>
   <updated>2017-11-01T00:00:00+08:00</updated>
   <id>/posts/LinuxPublicService</id>
   <content type="html">&lt;p&gt;今天发现开发环镜的几台服务器时间不同步，百度搜索公共ntp服务器得到的几乎都不能用，今天特意记录下能用的公共服务，以防下次再被百度误导(百度 阿里云ntp即可得到此结果)&lt;!-- more --&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1、阿里云公共NTP服务器&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Linux NTP服务器地址：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ntp1.aliyun.com
ntp2.aliyun.com
ntp3.aliyun.com
ntp4.aliyun.com
ntp5.aliyun.com
ntp6.aliyun.com
ntp7.aliyun.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Windows NTP服务器地址：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;time.pool.aliyun.com
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;2、阿里云公共DNS服务器&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt; 223.5.5.5

 223.6.6.6

 或 http://www.alidns.com
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;3、阿里云公共镜像服务器&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;公共镜像站：&lt;a href=&quot;http://mirrors.aliyun.com/&quot; title=&quot;http://mirrors.aliyun.com/&quot;&gt;http://mirrors.aliyun.com/&lt;/a&gt; 镜像同步频率是每天凌晨2:00-4:00，覆盖了大多数开源软件及Linux发行版。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>python模块详解—time</title>
   <link href="http://magicjms.github.io/posts/Python_Lib_time.html"/>
   <updated>2017-10-28T00:00:00+08:00</updated>
   <id>/posts/Python_Lib_time</id>
   <content type="html">&lt;p&gt;时间计算是程序中最常用到的，本篇主要记录、总结python time模块的功能和主要函数,此函数的缺陷是不能像datatime一样直接对时间进行加减运算，如要进行加减运算必须要先转换成时间戳&lt;!-- more --&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;一、&lt;b&gt;时间基础知识&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在Python中，通常有这几种方式来表示时间：&lt;/p&gt;

&lt;p&gt;1）时间戳&lt;/p&gt;

&lt;p&gt;2）格式化的时间字符串&lt;/p&gt;

&lt;p&gt;3）元组（struct_time）共九个元素。&lt;/p&gt;

&lt;p&gt;由于Python的time模块实现主要调用C库，所以各个平台可能有所不同。&lt;/p&gt;

&lt;p&gt;1、UTC（Coordinated Universal Time，世界协调时）亦即格林威治天文时间，世界标准时间。在中国为UTC+8。DST（Daylight Saving Time）即夏令时。&lt;/p&gt;

&lt;p&gt;2、时间戳（timestamp）的方式：通常来说，时间戳表示的是从1970年1月1日00:00:00开始按秒计算的偏移量。我们运行“type(time.time())”，返回的是float类型。返回时间戳方式的函数主要有time()，clock()等。&lt;/p&gt;

&lt;p&gt;3、元组（struct_time）方式：struct_time元组共有9个元素，返回struct_time的函数主要有gmtime()，localtime()，strptime()。&lt;/p&gt;

&lt;p&gt;下面列出这种方式元组中的几个元素：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;索引（Index）	属性（Attribute）	      值（Values）
   0	          tm_year（年）	               比如2011 
   1	          tm_mon（月）	               1 - 12
   2	          tm_mday（日）	               1 - 31
   3	          tm_hour（时）	               0 - 23
   4	          tm_min（分）	               0 - 59
   5	          tm_sec（秒）	               0 - 61
   6	          tm_wday（weekday）	       0 - 6（0表示周日）
   7	          tm_yday（一年中的第几天）     1 - 366
   8	          tm_isdst（是否是夏令时）      默认为-1
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;二、&lt;b&gt;time模块函数概览&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;===========»time 模块中所有的函数«===========&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;time.accept2dyear time.ctime        time.mktime       time.struct_time
time.altzone      time.daylight     time.sleep        time.time
time.asctime      time.gmtime       time.strftime     time.timezone
time.clock        time.localtime    time.strptime     time.tzname
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;三、&lt;b&gt;各时间格式转换关系以及对应的函数&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://magicjms.github.io/assets/2017-10-28-Python_Lib_time/1.png&quot; alt=&quot;有帮助的截图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;四、&lt;b&gt;主要函数讲解&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1）time.localtime([secs])：将一个时间戳转换为当前时区的struct_time。secs参数未提供，则以当前时间为准。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;localtime([seconds]) -&amp;gt; (tm_year,tm_mon,tm_day,tm_hour,tm_min,tm_sec,tm_wday,tm_yday,tm_isdst)
&amp;gt;&amp;gt;&amp;gt; time.localtime()
time.struct_time(tm_year=2011, tm_mon=5, tm_mday=5, tm_hour=14, tm_min=14, tm_sec=50, tm_wday=3, tm_yday=125, tm_isdst=0)
&amp;gt;&amp;gt;&amp;gt; time.localtime(1304575584.1361799)
time.struct_time(tm_year=2011, tm_mon=5, tm_mday=5, tm_hour=14, tm_min=6, tm_sec=24, tm_wday=3, tm_yday=125, tm_isdst=0)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2）time.gmtime([secs])：和localtime()方法类似，gmtime()方法是将一个时间戳转换为UTC时区（0时区）的struct_time。
   gmtime([seconds]) -&amp;gt; (tm_year, tm_mon, tm_day, tm_hour, tm_min,tm_sec, tm_wday, tm_yday, tm_isdst)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;time.gmtime()
time.struct_time(tm_year=2011, tm_mon=5, tm_mday=5, tm_hour=6, tm_min=19, tm_sec=48, tm_wday=3, tm_yday=125, tm_isdst=0)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3）time.time()：返回当前时间的时间戳。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; time.time() 
1304575584.1361799
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4）time.mktime(t)：将一个struct_time转化为时间戳。&lt;/p&gt;

&lt;p&gt;mktime(tuple) -&amp;gt; floating point number&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; time.mktime(time.localtime())
1304576839.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5）time.sleep(secs)：线程推迟指定的时间运行。单位为秒。&lt;/p&gt;

&lt;p&gt;6）time.clock()：这个需要注意，在不同的系统上含义不同。在UNIX系统上，它返回的是“进程时间”，它是用秒表示的浮点数（时间戳）。而在WINDOWS中，第一次调用，返回的是进程运行的实际时间。而第二次之后的调用是自第一次调用以后到现在的运行时间。（实际上是以WIN32上QueryPerformanceCounter()为基础，它比毫秒表示更为精确）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;clock() -&amp;gt; floating point number
import time  
if __name__ == '__main__':  
	time.sleep(1)  
	print &quot;clock1:%s&quot; % time.clock()  
	time.sleep(1)  
	print &quot;clock2:%s&quot; % time.clock()  
	time.sleep(1)  
	print &quot;clock3:%s&quot; % time.clock()
运行结果：
clock1:3.35238137808e-006 
clock2:1.00004944763 
clock3:2.00012040636
其中第一个clock()输出的是程序运行时间
第二、三个clock()输出的都是与第一个clock的时间间隔
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;7）time.asctime([t])：把一个表示时间的元组或者struct_time表示为这种形式：’Sun Jun 20 23:21:05 1993’。如果没有参数，将会将time.localtime()作为参数传入。&lt;/p&gt;

&lt;p&gt;asctime([tuple]) -&amp;gt; string&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; time.asctime()
'Thu May 5 14:55:43 2011'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8）time.ctime([secs])：把一个时间戳（按秒计算的浮点数）转化为time.asctime()的形式。如果参数未给或者为None的时候，将会默认time.time()为参数。它的作用相当于time.asctime(time.localtime(secs))。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ctime(seconds) -&amp;gt; string
&amp;gt;&amp;gt;&amp;gt; time.ctime()
'Thu May 5 14:58:09 2011'
&amp;gt;&amp;gt;&amp;gt; time.ctime(time.time())
'Thu May 5 14:58:39 2011'
&amp;gt;&amp;gt;&amp;gt; time.ctime(1304579615)
'Thu May 5 15:13:35 2011'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;9）time.strftime(format[,t])：把一个代表时间的元组或者struct_time（如由time.localtime()和time.gmtime()返回）转化为格式化的时间字符串。如果t未指定，将传入time.localtime()。如果元组中任何一个元素越界，ValueError的错误将会被抛出。
strftime(format[, tuple]) -&amp;gt; string&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;格式	含义	
%a	本地（locale）简化星期名称	 
%A	本地完整星期名称	 
%b	本地简化月份名称	 
%B	本地完整月份名称	 
%c	本地相应的日期和时间表示	 
%d	一个月中的第几天（01 - 31）	 
%H	一天中的第几个小时（24小时制，00 - 23）	 
%I	第几个小时（12小时制，01 - 12）	 
%j	一年中的第几天（001 - 366）	 
%m	月份（01 - 12）	 
%M	分钟数（00 - 59）	 
%p	本地am或者pm的相应符	
%S	秒（01 - 61）	
%U	一年中的星期数。（00 - 53星期天是一个星期的开始。）第一个星期天之前的所有天数都放在第0周。	
%w	一个星期中的第几天（0 - 6，0是星期天）	
%W	和%U基本相同，不同的是%W以星期一为一个星期的开始。	 
%x	本地相应日期	 
%X	本地相应时间	 
%y	去掉世纪的年份（00 - 99）	 
%Y	完整的年份	 
%Z	时区的名字（如果不存在为空字符）	 
%%	‘%’字符
备注：
“%p”只有与“%I”配合使用才有效果。
文档中强调确实是0 - 61，而不是59，闰年秒占两秒（汗一个）。
当使用strptime()函数时，只有当在这年中的周数和天数被确定的时候%U和%W才会被计算。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;10）time.strptime(…)&lt;/p&gt;

&lt;p&gt;strptime(string, format) -&amp;gt; struct_time&lt;/p&gt;

&lt;p&gt;将时间字符串根据指定的格式化符转换成数组形式的时间&lt;/p&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;p&gt;2009-03-20 11:45:39  对应的格式化字符串为：%Y-%m-%d %H:%M:%S&lt;/p&gt;

&lt;p&gt;Sat Mar 28 22:24:24 2009 对应的格式化字符串为：%a %b %d %H:%M:%S %Y&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;五、日常应用&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1.python获取当前时间&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;time.time() 获取当前时间戳
In [12]: time.time()
Out[12]: 1509258439.771

time.localtime() 当前时间的struct_time形式
In [13]: time.localtime()
Out[13]: time.struct_time(tm_year=2017, tm_mon=10, tm_mday=29, tm_hour=14, tm_min=27, tm_sec=25, tm_wday=6, tm_yday=302, tm_isdst=0)

time.ctime() 当前时间的字符串形式
In [14]: time.ctime()
Out[14]: 'Sun Oct 29 14:27:29 2017'

time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)
In [11]: time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)
Out[11]: '2017-10-29 14:27:11'

time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;,time.localtime()) #把时间元组struct_time转化为字符格式 2.python格式化字符串  

  格式化成2009-03-20 11:45:39形式
  time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime()) 
  
  格式化成Sat Mar 28 22:24:24 2009形式
  time.strftime(&quot;%a %b %d %H:%M:%S %Y&quot;, time.localtime()) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.将格式字符串转换为时间戳&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  a = &quot;Sat Mar 28 22:24:24 2009&quot;
  b = time.mktime(time.strptime(a,&quot;%a %b %d %H:%M:%S %Y&quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;六、疑点&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1.夏令时&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  在struct_time中，夏令时好像没有用，例如
  a = (2009, 6, 28, 23, 8, 34, 5, 87, 1)
  b = (2009, 6, 28, 23, 8, 34, 5, 87, 0)
  a和b分别表示的是夏令时和标准时间，它们之间转换为时间戳应该相关3600，但是转换后输出都为646585714.0		
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参考链接：&lt;/p&gt;

&lt;p&gt;http://qinxuye.me/article/details-about-time-module-in-python/&lt;/p&gt;

&lt;p&gt;http://blog.csdn.net/kiki113/article/details/4033017&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>MAC常用资源网站</title>
   <link href="http://magicjms.github.io/posts/MACCommSourceInfo.html"/>
   <updated>2017-10-28T00:00:00+08:00</updated>
   <id>/posts/MACCommSourceInfo</id>
   <content type="html">&lt;p&gt;大家都知道苹果电脑MAC上很多软件都是要收费，即使有些网站上提供破解版的，也大多数不能使用。今天就给大家分享几个我经常下载MAC破解软件的网站&lt;!-- more --&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;一、常用软件下载网站&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;精品MAC应用分享：&lt;a href=&quot;http://xclient.info/&quot; title=&quot;精品MAC应用分享&quot;&gt;http://xclient.info/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>CentOS Python2.6升级2.7并安装easy_install和pip</title>
   <link href="http://magicjms.github.io/posts/LinuxUpdatePyton2.7.html"/>
   <updated>2017-10-28T00:00:00+08:00</updated>
   <id>/posts/LinuxUpdatePyton2.7</id>
   <content type="html">&lt;p&gt;Centos6.Xl默认自带的是Python2.6，而在实际工作中很多应用必须要求Python2.7以上，所以本篇文章主要记录、总结如何将CentOS自带的Python版本升级为2.7&lt;!-- more --&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;一、下载安装Python 2.7&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;从Python官网下载&lt;a href=&quot;https://www.python.org/downloads/&quot; title=&quot;Python官网&quot;&gt;https://www.python.org/downloads/&lt;/a&gt;并安装。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/local/src
wget https://www.python.org/downloads/
tar -tvzf Python-2.7.14.tgz
cd Python-2.7.14
./configure --prefix=/usr/local/Python-2.7.14
make &amp;amp;&amp;amp; make install
cd /usr/local
ln -s Python-2.7.14 python

如make报错，请安装依赖包，具体参考：
https://danieleriksson.net/2017/02/08/how-to-install-latest-python-on-centos/
http://www.suohi.cc/posts/5631ee861f6d1303e9f04a3d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将系统Python版本修改为新安装的Python2.7并验证&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mv /usr/bin/python /usr/bin/python2.6
ln -s /usr/local/python/bin/python2.7 /usr/bin/python
python -V
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修复因升级Pyhton为2.7后导致yum不能使用并验证&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /usr/bin/yum
将#!/usr/bin/python修改为!/usr/bin/python2.6
yum install epel* 
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;二、安装Python包管理工具(setuptools和pip)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;font style=&quot;color:red&quot;&gt;安装setuptools和ip必须源码安装，如果yum安装的话，有可能安装的是对应于python2.6的版本导致无法使用&lt;/font&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;下载安装setuptools工具 &lt;a href=&quot;https://pypi.python.org/pypi/setuptools&quot; title=&quot;setuptools&quot;&gt;https://pypi.python.org/pypi/setuptools&lt;/a&gt;&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;cd /usr/local/src
wget https://pypi.python.org/packages/45/29/8814bf414e7cd1031e1a3c8a4169218376e284ea2553cc0822a6ea1c2d78/setuptools-36.6.0.zip#md5=74663b15117d9a2cc5295d76011e6fd1
tar -xf setuptools-0.6c11.tar.gz
cd setuptools-0.6c11
python setup.py install
&lt;/code&gt;&lt;/pre&gt;

    &lt;font style=&quot;color:red&quot;&gt;安装完成后会在/usr/local/python/bin目录下多增加如下两个命令：&lt;/font&gt;

    &lt;pre&gt;&lt;code&gt;easy_install
easy_install-2.7
&lt;/code&gt;&lt;/pre&gt;
    &lt;font style=&quot;color:red&quot;&gt;设置系统环镜变量，确保系统easy_install指令是新安装的&lt;/font&gt;

    &lt;pre&gt;&lt;code&gt;which easy_install  如果有则说明系统原来就安装有此命令，需要使用如下指令将此命令链接到上面安装最新版本上去
mv /usr/bin/easy_install /usr/bin/easy_install_old
ln -s /usr/local/pyhton/bin/easy_install-2.7 /usr/bin/easy_install 
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载安装pip工具 &lt;a href=&quot;https://pypi.python.org/pypi/pip/9.0.1&quot; title=&quot;pip官方下载地址&quot;&gt;https://pypi.python.org/pypi/pip/9.0.1&lt;/a&gt;&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;cd /usr/local/src
tar -xf pip-9.0.1.tgz
cd pip-9.0.1
python setup.py install
&lt;/code&gt;&lt;/pre&gt;

    &lt;font style=&quot;color:red&quot;&gt;安装完成后会在/usr/local/python/bin目录下多增加如下两个命令：&lt;/font&gt;

    &lt;pre&gt;&lt;code&gt;pip
pip2
pip2.7
&lt;/code&gt;&lt;/pre&gt;

    &lt;font style=&quot;color:red&quot;&gt;设置系统环镜变量，确保系统pip指令是新安装的&lt;/font&gt;

    &lt;pre&gt;&lt;code&gt;which pip  如果有则说明系统原来就安装有此命令，需要使用如下指令将此命令链接到上面安装最新版本上去
mv /usr/bin/pip /usr/bin/pip_old
ln -s /usr/local/pyhton/bin/pip2.7 /usr/bin/pip 
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;三、验证Python版本以及pip包管理工具是否正常&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;ptyhon -V
pip install requests
&lt;/code&gt;&lt;/pre&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@widget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;respond_to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# show.html.erb&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@widget&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>U盘安装MAC系统</title>
   <link href="http://magicjms.github.io/posts/UpanInstallMACSys.html"/>
   <updated>2017-10-27T00:00:00+08:00</updated>
   <id>/posts/UpanInstallMACSys</id>
   <content type="html">&lt;p&gt;U盘安装Windows操作系统相信大家都会，但是使用U盘安装苹果MAC操作系统(OS X Yosemite)呢，其实方法也比较简单，下面我就是我使用U盘安装MAC操作的步骤以及总结(共分三步：下载系统程序—制作U盘启动盘—从U盘启动盘进入MAC并安装系统)。这样以后想给 Mac 重装系统、在没有网络的情况下或者帮多台机器安装系统都方便得多&lt;!-- more --&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;一、下载安装程序&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;要制作安装盘，必须先下载苹果系统（Yesemite系统）的安装程序，这里提供两种方法下载&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1、苹果官方下载（即AppStore搜索Yesemite即可），这里不推荐使用，速度太慢&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;2、第三方网站下载，如：http://www.pc6.com/pc/OSxtjx/&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;　　下载完成后的文件是以.dmg结尾的文件，双击下载好的文件后会出现一个验证过程，直接点击”跳过”，随后会出现一个需要同意的画面，点击同意。&lt;/p&gt;

&lt;p&gt;　　进入下一个画面，将图标拖到Application文件夹，等待移动完成。&lt;/p&gt;

&lt;p&gt;　　程序移动完成后，打开Finder，进入应用程序文件夹，这个时候会发现安装程序已经出现在安装程序列表中了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://magicjms.github.io/assets/2017-10-27-UpanInstallMACSys/1.png&quot; alt=&quot;有帮助的截图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://magicjms.github.io/assets/2017-10-27-UpanInstallMACSys/2.png&quot; alt=&quot;有帮助的截图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://magicjms.github.io/assets/2017-10-27-UpanInstallMACSys/3.png&quot; alt=&quot;有帮助的截图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://magicjms.github.io/assets/2017-10-27-UpanInstallMACSys/4.png&quot; alt=&quot;有帮助的截图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://magicjms.github.io/assets/2017-10-27-UpanInstallMACSys/5.png&quot; alt=&quot;有帮助的截图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;二、准备移动存储设备&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;准备一个 8GB 或以上容量的 U盘，确保里面的数据已经妥善备份好（该过程会抹掉 U 盘全部数据）&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;三、格式化U盘&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;插入你的 U 盘，然后在「应用程序」-&amp;gt;「实用工具」里面找到并打开「磁盘工具」，或者直接用 Spotlight 搜索 “磁盘工具” 打开，如下图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://magicjms.github.io/assets/2017-10-27-UpanInstallMACSys/6.png&quot; alt=&quot;有帮助的截图&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1- 在左方列表中找到 U 盘的名称并点击&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;右边顶部选择 2 -「分区」，然后在 3 -「分区布局」选择「1个分区」&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在分区信息中的 4 -「名称」输入「iPlaySoft」 (由于后面的命令中会用到此名称，如果你要修改成其他(英文)，请务必对应修改后面的命令)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在「格式」中选择 5 -「Mac OS 扩展 (日志式)」&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;这时，先别急着点“应用”，还要先在 6 -「选项」里面，如下图&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://magicjms.github.io/assets/2017-10-27-UpanInstallMACSys/7.png&quot; alt=&quot;有帮助的截图&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;选择「GUID 分区表」，然后点击「好」&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最后再点「应用」开始对 U 盘进行格式化。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;四、输入终端命令开始制作启动盘&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;请再次确保名为 “安装 OS X Yosemite” 的文件是保存在「应用程序」的目录中&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在「应用程序」-&amp;gt;「实用工具」里面找到「终端」并打开。也可以直接通过 Spotlight 搜索「终端」打开&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;复制下面的命令，并粘贴到「终端」里，按回车运行：&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;sudo /Applications/Install\ OS\ X\ Yosemite.app/Contents/Resources/createinstallmedia --volume /Volumes/iPlaySoft --applicationpath /Applications/Install\ OS\ X\ Yosemite.app --nointeraction&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;回车后，系统会提示你输入管理员密码，接下来就是等待系统开始制作启动盘了。这时，命令执行中你会陆续看到类似以下的信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Erasing Disk: 0%... 10%... 20%... 30%...100%...
Copying installer files to disk...
Copy complete.
Making disk bootable...
Copying boot files...
Copy complete.
Done. 当你看到最后有 「Copy complete」和「Done」 字样出现就是表示启动盘已经制作完成了！
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;b&gt;五、U盘启动安装OS X Yosemite 的方法&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当你插入制作完成的 OS X Yosemite U盘启动盘之后，桌面出现「Install OS X Yosemite」的盘符那么就表示启动盘是正常的了。那么怎样通过 USB 启动进行全新的系统安装呢？&lt;/p&gt;

&lt;p&gt;其实很简单，先在目标电脑上插上 U 盘，然后重启你的 Mac，然后一直按住「option」(alt) 按键不放，直到屏幕显示多出一个 USB 启动盘的选项，如下图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://magicjms.github.io/assets/2017-10-27-UpanInstallMACSys/8.png&quot; alt=&quot;有帮助的截图&quot; /&gt;
这时选择 U 盘的图标回车，即可通过 U 盘来安装 Yosemite 了！这时，你可以直接覆盖安装系统(升级)，也可以在磁盘工具里面格式化抹掉整个硬盘，或者重新分区等实现全新的干净的安装。&lt;/p&gt;

&lt;p&gt;测试代码高亮显示：&lt;/p&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://magicjms.github.io/css/pygments.css&quot; /&gt;

</content>
 </entry>
 
 
</feed>
</div>

<br/>
<b>原创文章，转载请注明出处！</b>
<br/>
<b>本文链接：</b><a href="http://localhost:8090/atom.xml" title="atom.xml">http://localhost:8090/atom.xml</a>

<!-- next and previous -->
<div style="margin-top:15px; margin-bottom:10px">
   
  
</div>
<hr>
<!-- Blog Comments -->
<div class="media">
  请修改_includes/comment.html添加评论代码。 
</div>
        </div>
        <!-- Blog Sidebar Widgets Column -->
        <div class="col-md-4">
          <!-- Blog Categories Well -->
          <div class="well">
            <h4>
              栏目分类
            </h4>
            <div class="row">
                            <div class="col-lg-6">
                <ul class="list-unstyled">
                  <li>
                    <a href="/posts/system.html">
                      系统
                    </a>
                  </li>
                  <li>
                    <a href="/posts/web.html">
                      Web建站
                    </a>
                  </li>
                  <li>
                    <a href="/posts/read.html">
                      读书笔记
                    </a>
                  </li>
                  <li>
                    <a href="/archives.html">
                      存档
                    </a>
                  </li>
                </ul>
              </div>
              <!-- /.col-lg-6 -->
              <div class="col-lg-6">
                <ul class="list-unstyled">
                  <li>
                    <a href="/posts/python.html">
                      python语言
                    </a>
                  </li>                  
				  <li>
                    <a href="/posts/linux.html">
                      Linux相关
                    </a>
                  </li>
                  <li>
                    <a href="/posts/other.html">
                      杂记
                    </a>
                  </li>
                  <li>
                    <a href="/tags.html">
                      Tags
                    </a>
                  </li>
                </ul>
              </div>
              <!-- /.col-lg-6 -->
 
            </div>
            <!-- /.row -->
          </div>
		  <!-- Blog Recent Well -->
          <div class="well">
            <h4>
              最新文章
            </h4>
			<div class="row">
                            <div class="col-lg-12">
                <ul class="list-unstyled">
				
                  <li>
                    <a href="/posts/Linux-base-curl-post.html">
                      curl模拟http发送get或post接口测试
                    </a>
                  </li>
				
                  <li>
                    <a href="/posts/Linux-base-cmd-wget.html">
                      wget命令详解
                    </a>
                  </li>
				
                  <li>
                    <a href="/posts/Python_Base_isinstance.html">
                      python内建函数—isinstance
                    </a>
                  </li>
				
                  <li>
                    <a href="/posts/Linux-shell_time.html">
                      shell脚本中的时间运算
                    </a>
                  </li>
				
                  <li>
                    <a href="/posts/LinuxPublicService.html">
                      阿里云公共NTP、DNS、镜像服务地址信息
                    </a>
                  </li>
				
                  <li>
                    <a href="/posts/Python_Lib_time.html">
                      python模块详解—time
                    </a>
                  </li>
				
                  <li>
                    <a href="/posts/MACCommSourceInfo.html">
                      MAC常用资源网站
                    </a>
                  </li>
				
                  <li>
                    <a href="/posts/LinuxUpdatePyton2.7.html">
                      CentOS Python2.6升级2.7并安装easy_install和pip
                    </a>
                  </li>
				
                  <li>
                    <a href="/posts/UpanInstallMACSys.html">
                      U盘安装MAC系统
                    </a>
                  </li>
				  
                </ul>
              </div> 
			</div>
          </div>
        </div>
      </div>
      <!-- /.row -->

      <!-- Footer -->
      <footer>
        <div class="row">
          <div class="col-lg-12">
                        <div style="text-align:center;margin-top:15px;">
				Copyright &copy; magicjms.github.io, generated by Jekyll, designed by <a href="https://www.panxw.com">panxw</a>. <a href="https://github.com/panxw/panxw.github.com">[source]</a>
				<br/>
				请修改_includes/copyright.html添加统计代码。
            </div>
<div class="cb-search-tool" style="position: fixed; top: 0px ; bottom: 0px; left: 0px; right:  0px;
      opacity: 0.95; background-color: #111111; z-index: 9999; display: none;">
    <input type="text" class="form-control cb-search-content" id="cb-search-content" style="position: fixed; top: 60px" placeholder="文章标题 日期 标签" >

    <div style="position: fixed; top: 16px; right: 16px;">
        <img src="/search/img/cb-close.png"  id="cb-close-btn"/>
    </div>
</div>

<div style="position: fixed; right: 16px; bottom: 20px;">
    <img src="/search/img/cb-search.png"  id="cb-search-btn"  title="双击ctrl试一下"/>
</div>

<link rel="stylesheet" href="/search/css/cb-search.css">

<script src="/search/js/bootstrap3-typeahead.min.js"></script>
<script src="/search/js/cb-search.js"></script> 
          </div>
          <!-- /.col-lg-12 -->
        </div>
        <!-- /.row -->
      </footer>
    </div>
    <!-- /.container -->
  </body>

</html>
